---
- hosts: all
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: true

  tasks:
  - name: fix debian sudoers file
    sudo: yes
    lineinfile:
      dest: /etc/sudoers
      backup: yes
      regexp: "^%sudo\\s+ALL=\\(ALL:ALL\\)\\s+ALL$"
      line: "%sudo   ALL=(ALL) NOPASSWD: ALL"
    tags:
      - system

  - name: apt | add wheezy backports
    apt_repository:
      repo: deb http://http.debian.net/debian wheezy-backports main
      state: present
    tags:
      - system

  - name: apt | install https transport for apt
    apt:
      pkg: apt-transport-https
      state: installed
      # update_cache: yes
    tags:
      -system

  - name: apt | add node key
    sudo: yes
    apt_key:
      url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      state: present
    tags:
      - system

  - name: apt | add nodejs sources
    apt_repository:
      repo: 'deb https://deb.nodesource.com/node wheezy main'
      state: present
    tags:
      - system

  - name: apt | add nodejs sourcecode sources
    apt_repository:
      repo: 'deb-src https://deb.nodesource.com/node wheezy main'
      state: present
    tags:
      - system

  - name: apt | add elasticsearch key
    sudo: yes
    apt_key:
      url: https://packages.elastic.co/GPG-KEY-elasticsearch
      state: present
    tags:
      - system

  - name: apt | add elasticsearch sources
    apt_repository:
      repo: 'deb http://packages.elastic.co/elasticsearch/1.6/debian stable main'
      state: present
    tags:
      - system

  - name: apt | install required system packages
    apt:
      pkg: "{{item}}"
      state: installed
      update_cache: yes
    with_items: system_packages
    tags:
      - system

  - name: vim | download spf13
    get_url: url={{ vim.spf13 }} dest={{ vim.spf13_install }}
    tags:
      - system

  - name: vim | install spf13
    sudo_user: vagrant
    command: sh {{ vim.spf13_install }}
    tags:
      - system

- hosts: all
  vars_files:
    - vars.yml
  gather_facts: false
  tasks:
  - name: pip | setup virtualenv
    command: mkdir -p {{ python.virtualenv_location }}
    command: virtualenv {{ python.virtualenv_location }}
    tags:
      - python

  - name: pip | update setuptools
    pip:
      name: setuptools
      virtualenv: "{{ python.virtualenv_location }}"
      state: latest
    tags:
      - python

  - name: pip | update pip
    pip:
      name: pip
      virtualenv: "{{ python.virtualenv_location }}"
      state: latest
    tags:
      - python

  - name: pip | ensure python requirements are installed to latest version
    pip:
      requirements: "{{ project_root }}/{{ python.requirements }}"
      virtualenv: "{{ python.virtualenv_location }}"
    tags:
      - python

- hosts: all
  vars_files:
    - vars.yml
  # gather_facts: false

  handlers:
  - name: mysql | restart mysql
    sudo: yes
    service:
      name: mysql
      state: restarted
    tags:
      - db





  - name: elasticsearch | restart elasticsearch
    sudo: yes
    service:
      name: elasticsearch
      state: started
    tags:
      - db

- hosts: all
  vars_files:
    - vars.yml

- hosts: all
  vars_files:
    - vars.yml
  tasks:
  #- name: django | default local settings
  #  copy: src=local_settings.py dest={{ project_root }}/{{ app.name }}/settings/local.py owner=vagrant
  #  tags:
  #    - django

  - name: createdb
    sudo: yes
    mysql_db: 
      name: "{{ mysql.name}}"
      state: present

  #- name: django | migrations
  #  command: "{{ user_home }}/venv/bin/python {{ project_root }}/manage.py makemigrations"
  #  command: "{{ user_home }}/venv/bin/python {{ project_root }}/manage.py migrate"
  #  tags:
  #    - django

  # FIXME: this is failing with a connection refused error, as if elasticsearch was not running
  # - name: django | search index
  #   command: "{{ user_home }}/venv/bin/python {{ project_root }}/manage.py update_index"
  #   tags:
  #     - django
