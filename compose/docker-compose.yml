

volumes:
  local_mysql_data: { }
  local_elasticsearch_data: { }

services:

  nginx-proxy:
    restart: always
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ../nginx/certs:/etc/nginx/certs
      - ../nginx/vhost:/etc/nginx/vhost.d
      - ../nginx/html:/usr/share/nginx/html

  nginx-proxy-acme:
      restart: always
      image: nginxproxy/acme-companion
      volumes_from:
        - nginx-proxy
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      environment:
        - DEFAULT_EMAIL=kdl-support@kcl.ac.uk
        - ACME_CA_URI=https://ca.core.cch.kcl.ac.uk/acme/acme/directory
        - CA_BUNDLE=/usr/local/share/ca-certificates/kdl_ca.crt

  db:
    image: library/mysql:5.7.35
    #command: --default-authentication-plugin=mysql_native_password
    container_name: hgl_db
    volumes:
      - local_mysql_data:/var/lib/mysql
    restart: unless-stopped
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: mysql --user=root --password=$$MYSQL_ROOT_PASSWORD -e 'SHOW DATABASES;'
      timeout: 10s
      interval: 5s
      retries: 10
    env_file:
      - .env

  elasticsearch:
    image: elasticsearch:7.10.1
    volumes:
      - local_elasticsearch_data:/usr/share/elasticsearch/data
    env_file:
      - .env
    ports:
      - '9200:9200'
      - '9300:9300'
    restart: unless-stopped

  # Remember to copy the schema! (Not automatic at present)
  # To build:
  # docker-compose -f local.yml run --rm web python manage.py build_solr_schema --configure-directory=/app/solr_config/config
  # then docker cp results to solr folder above
  hgl:
    container_name: hgl_liv
    build:
      context: ../
      dockerfile: ./compose/local/django/Dockerfile
    command: /start
    #restart: unless-stopped
#    volumes:
#      - .:/app:z
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      VIRTUAL_HOST: "hgl.kdl.kcl.ac.uk,roomlogger.app.cch.kcl.ac.uk,localhost"
      LETSENCRYPT_HOST: "hgl.kdl.kcl.ac.uk,localhost"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000
    volumes:
      - ../testapp/config:/etc/testapp/config:ro



# Required - Openstack networking - note the indentation level
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1442
