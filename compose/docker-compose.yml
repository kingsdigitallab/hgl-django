
name: 'hgl_openstack'

x-var: &VIRTUAL_HOST "hgl-os.kdl.kcl.ac.uk,hgl.app.cch.kcl.ac.uk,localhost,127.0.0.1"



services:

#

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro


  nginx:
    build:
      context: ..
      dockerfile: ./compose/nginx/Dockerfile
    restart: unless-stopped
    expose:
      - "8001"
    volumes:
      - ../volumes/django/static:/usr/share/nginx/static:ro
    environment:
      VIRTUAL_HOST: *VIRTUAL_HOST
      VIRTUAL_PATH: "~^/(static/|redist/|robots.txt)"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8001


  db:
    image: library/mysql:5.7.35
    #command: --default-authentication-plugin=mysql_native_password
    container_name: hgl_db
    volumes:
      - ../volumes/local_mysql_data:/var/lib/mysql
    restart: unless-stopped
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: mysql --user=root --password=$$MYSQL_ROOT_PASSWORD -e 'SHOW DATABASES;'
      timeout: 10s
      interval: 5s
      retries: 10
    env_file:
      - .env

  elasticsearch:
    image: elasticsearch:7.10.1
    volumes:
      - ../volumes/poms_elasticsearch_data:/usr/share/elasticsearch/data
    env_file:
      - .env
    expose:
      - "9200"
      - "9300"
    restart: unless-stopped

  # Remember to copy the schema! (Not automatic at present)
  # To build:
  # docker-compose -f local.yml run --rm web python manage.py build_solr_schema --configure-directory=/app/solr_config/config
  # then docker cp results to solr folder above
  django:
    container_name: hgl_liv
    build:
      context: ../
      dockerfile: ./compose/local/django/Dockerfile
    command: /start
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - elasticsearch
#      db:
#        condition: service_healthy
    environment:
      VIRTUAL_HOST: "hgl-os.kdl.kcl.ac.uk,hgl.app.cch.kcl.ac.uk,localhost,127.0.0.1"
      VIRTUAL_PATH: "/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000
    volumes:
      - ../testapp/config:/etc/testapp/config:ro
      - ../volumes/django/static:/app/static

