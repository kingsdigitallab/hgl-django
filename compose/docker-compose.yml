

volumes:
  hgl_mysql_data: { }
  local_elasticsearch_data: { }
  django_static: { }

services:

#

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      #- ../nginx/certs:/etc/nginx/certs
      - ./nginx/html:/usr/share/nginx/html
      - django_static:/usr/share/nginx/static:ro


#  nginx:
#    build:
#      context: .
#      dockerfile: ./nginx/Dockerfile
#    expose:
#        - "8001"
#    depends_on:
#      - app
#    volumes:
#      - django_static:/usr/share/nginx/static:ro
#    restart: unless-stopped


  db:
    image: library/mysql:5.7.35
    #command: --default-authentication-plugin=mysql_native_password
    container_name: hgl_db
    volumes:
      - hgl_mysql_data:/var/lib/mysql:rw
    restart: unless-stopped
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: mysql --user=root --password=$$MYSQL_ROOT_PASSWORD -e 'SHOW DATABASES;'
      timeout: 10s
      interval: 5s
      retries: 10
    env_file:
      - .env

  elasticsearch:
    image: elasticsearch:7.10.1
    volumes:
      - local_elasticsearch_data:/usr/share/elasticsearch/data
    env_file:
      - .env
    ports:
      - '9200:9200'
      - '9300:9300'
    restart: unless-stopped

  # Remember to copy the schema! (Not automatic at present)
  # To build:
  # docker-compose -f local.yml run --rm web python manage.py build_solr_schema --configure-directory=/app/solr_config/config
  # then docker cp results to solr folder above
  app:
    container_name: hgl_liv
    build:
      context: ../
      dockerfile: ./compose/local/django/Dockerfile
    command: /start
    #restart: unless-stopped
#    volumes:
#      - .:/app:z
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      VIRTUAL_HOST: "hgl.kdl.kcl.ac.uk,hgl.app.cch.kcl.ac.uk,localhost.127.0.0.1"
      LETSENCRYPT_HOST: "hgl.kdl.kcl.ac.uk,hgl.app.cch.kcl.ac.uk,localhost,127.0.0.1"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000
    volumes:
      - ../testapp/config:/etc/testapp/config:ro
      - django_static:/app/static:rw



# Required - Openstack networking - note the indentation level
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1442
